<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:webflow="http://www.springframework.org/schema/webflow-config"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.2.xsd
		http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.2.xsd
		http://www.springframework.org/schema/webflow-config http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd"> 

	<!-- for scanning component -->
	<!-- <context:component-scan base-package="org.yash.rms.filter" />
	<context:component-scan base-package="org.yash.rms.helper" />
	<context:component-scan base-package="org.yash.rms.security" /> -->
     
   	<context:annotation-config />
    <context:component-scan base-package="org.yash" />
	<!-- <context:property-placeholder location="classpath*:/WEB-INF/spring-configuration/*.properties"/>  -->
	
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources -->
    <mvc:resources location="/, /resources/, /resources/**/**" mapping="/resources/**"/>

    <!-- Allows for mapping the DispatcherServlet to "/" by forwarding static resource 
    requests to the container's default Servlet -->
    <mvc:default-servlet-handler />
    
<import resource="classpath:META-INF/cxf/cxf.xml"/>
<import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>
<!-- Bean Declaration for the JacksonJsonProvider-->
<!-- Bean Declaration for the HibernateAwareObjectMapper-->
<bean class="org.codehaus.jackson.jaxrs.JacksonJsonProvider" id="jsonProvider">
<!-- <property name="mapper">
<bean class="com.inn.decent.utils.json.HibernateAwareObjectMapper" id="objectMapper">
<property name="prettyPrint" value="false"/>
</bean>
</property> -->
</bean>

<jaxrs:server address="/">
<jaxrs:providers>
<ref bean="jsonProvider"/>
<bean class="org.apache.cxf.jaxrs.ext.search.SearchContextProvider" id="searchContextProvider"/>
</jaxrs:providers>

<jaxrs:extensionMappings>
<entry key="json" value="application/json"/>
</jaxrs:extensionMappings>
<jaxrs:serviceBeans>
<bean class="org.yash.rms.rest.InfogramActiveRestImpl"/>
<bean class="org.yash.rms.rest.ResourceRestImpl"/>
<bean class="org.yash.rms.rest.UnAuthRestImpl"/>
</jaxrs:serviceBeans>
</jaxrs:server>

    <!-- Selects a static view for rendering without the need for an explicit controller -->
    <mvc:view-controller path="/login"/>
    <!-- <mvc:view-controller path="/" view-name="index"/>  -->
    <mvc:view-controller path="/uncaughtException"/>
    <mvc:view-controller path="/resourceNotFound"/>
    <mvc:view-controller path="/dataAccessFailure"/>


	<bean id="facadeMonitoringAdvisor" class="net.bull.javamelody.MonitoringSpringAdvisor">
	<property name="pointcut">
		<bean class="org.springframework.aop.support.JdkRegexpMethodPointcut">
			<property name="pattern" value=".*Service*" />
		</bean>
	</property>
</bean>
<bean id="facadeMonitoringAdvisor-Dao" class="net.bull.javamelody.MonitoringSpringAdvisor">
	<property name="pointcut">
		<bean class="org.springframework.aop.support.JdkRegexpMethodPointcut">
			<property name="pattern" value=".*Dao*" />
		</bean>
	</property>
</bean>
</beans>
